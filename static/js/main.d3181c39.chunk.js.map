{"version":3,"sources":["AuthenticationPresenter.js","AuthenticationDialog.js","NotificationPresenter.js","NotificationView.js","App.js","utils.js","ChannelListPresenter.js","ChannelListView.js","ChannelPresenter.js","ItemList.js","ChannelView.js","registerServiceWorker.js","AuthenticationService.js","ConsoleLogger.js","ChannelService.js","ChannelRepository.js","objectMerger.js","ChannelSyncService.js","NavigationService.js","EnclosureRepository.js","UpdateDaemon.js","PlayerPresenter.js","PlayerView.js","PlayerService.js","InfoPresenter.js","PubSub.js","InfoView.js","NetworkTest.js","FileSystemFile.js","FileSystemDirectory.js","FileSystemFileSystem.js","FileSystemService.js","index.js","migrationFunctions.js"],"names":["AuthenticationPresenter","authenticationView","this","_av","_cancelTokenCreds","PubSub","subscribe","_authRequest","bind","_cancelTokenNewPass","unsubscribe","passwordOnly","topic","data","_currentRequest","username","password","open","publish","split","newPassword","AuthenticationDialog","state","user","pass","handleClose","_pres","credentialsObtained","prop","event","newState","target","value","setState","finalize","actions","label","primary","keyboardFocused","onClick","usernameField","id","hintText","floatingLabelText","fullWidth","onChange","handleChange","newPasswordRules","modal","onRequestClose","autoScrollBodyContent","type","React","Component","NotificationPresenter","view","_view","_notifications","_regToken","ps","sub","showError","showNextMessage","message","error","push","_showingMessage","length","shift","show","setTimeout","timeoutCallback","token","unsub","NotificationView","muiTheme","getMuiTheme","palette","primary1Color","lightGreen800","accent1Color","deepOrangeA400","App","props","children","promisedPubSub","Promise","resolve","reject","requestId","uuid","cancelToken","resTopic","resData","ChannelListPresenter","_updateChannels","pps","then","res","channels","sort","ch1","ch2","title","localeCompare","allChannels","selectedChannels","filter","channel","selected","channelUrl","url","newChannelUrl","channelId","ChannelListView","showAddChannelDialog","addNewChannel","isChecked","updateChannelSelection","showChannel","menuNav","iconButtonElement","color","anchorOrigin","horizontal","vertical","targetOrigin","primaryText","goToPlayerPage","goToInfoPage","menuActions","addChannelDialogAction","_addNewChannel","iconElementLeft","iconElementRight","_handleNewChannelUrl","Tabs","List","map","key","secondaryText","description","_handleListItemClick","leftCheckbox","checked","onCheck","_handleChannelSelectChange","ChannelPresenter","_updateState","itemId","encDoc","enclosureDoc","failed","item","triaged","playing","all","enclosureDocs","doc","binExists","items","i1","i2","date","ItemList","openItemId","itemTree","nextProps","reduce","prev","Date","month","getMonth","cat","getFullYear","Object","keys","touch","listItems","primaryTogglesNestedList","onNestedListToggle","_onNestedListToggle","nestedItems","patiallyPlayedChip","playCountChip","downloadChip","newChip","menuEntries","onToggleNew","chipStyle","margin","currentTime","style","playCount","find","downloadStatus","binExistsEntry","be","enclosureBinaryExists","onRefreshDownload","onPlay","onRemoveDownload","onRequestDownload","rightIconMenu","ent","rightIconButton","display","flexWrap","ChannelView","play","refreshDownload","requestDownload","removeDownload","toggleTriaged","backNavigation","goToChannelListPage","_toggleNew","_play","onRefreshDownloads","_refreshDownload","_removeDownload","_requestDownload","match","params","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","AuthenticationService","_userPoolId","_clientId","_getIdToken","_logout","userPool","CognitoUserPool","UserPoolId","ClientId","getCurrentUser","signOut","getSession","session","getIdToken","jwtToken","creds","authenticationDetails","AuthenticationDetails","Username","Password","userData","Pool","cognitoUser","CognitoUser","authenticateUser","onSuccess","result","onFailure","err","newPasswordRequired","userAttributes","requiredAttributes","resNewPassword","email_verified","completeNewPasswordChallenge","e","_getCurrentIdToken","_authenticate","idToken","ConsoleLogger","_logMessage","ChannelService","_getApiChannels","_getApiChannelById","_postNewApiChannel","_getApiItemsByChannelId","_getApiItemBlobByChannelIdId","_getApiItemInfoByChannelIdId","axios","head","headers","info","get","responseType","blob","post","ChannelRepository","pouch","pubSub","_pouch","_ps","getAllChannels","getChannelById","getItemsByChannelId","getItemByChannelIdId","addOrUpdateChannel","addOrUpdateItem","respId","allDocs","include_docs","startkey","endkey","rows","row","_id","put","Error","mergePropertiesFromObject","mainObj","suppObj","update","forEach","JSON","stringify","ChannelSyncService","syncChannels","completeList","apiChannels","localChannels","apiChannel","localChannel","itemRes","newProms","apiItems","localItems","apiItem","localItem","itm","NavigationService","goToChannelPage","Router","history","EnclosureRepository","fss","_fss","getAllEnclosureDocs","getEnclosureDocsByChannelId","getEnclosureDocByChannelIdItemId","removeEnclosureBinaryByChannelIdItemId","addOrUpdateEnclosureDoc","addOrUpdateEnclosureBinary","removeEnclosureDocAndBinaryByChannelItemId","checkEnclosureBinaryExistsByChannelItemId","getFileSystem","root","getDirectory","getFile","enclDoc","status","createDirectory","createFile","write","enclosure","remove","_removeEnclosureBinaryByChannelIdItemId","UpdateDaemon","nt","currentlyRunning","setInterval","tick","shouldAccessNetwork","prom","resEncDocs","docs","idx","queryUsageAndQuota","requiredSpace","parseInt","usage","quota","requestQuota","Math","max","round","resQuota","resDoc","oldLastSync","lastSync","toISOString","substr","PlayerPresenter","_statusToken","_handleStatusChange","_updateCurrentState","volume","speed","_intervalCancelToken","_updateCurrentTime","clearInterval","selectedItem","duration","playlist","PlayerView","selectedItemChanged","volumeChanged","speedChanged","currentTimeChanged","refreshEnclosure","deleteEnclosure","sec","min","floor","menu","itemMenu","_handleEnclosureRefresh","_handleEnclosureDelete","playButton","disabled","start","pauseButton","stop","pausePlayButton","Toolbar","firstChild","className","_formatTime","step","_handleCurrentTimeChange","_handleVolumeChange","_handleSpeedChange","PlayerService","audio","Audio","_handlePlayFun","_handlePlay","_handlePauseFun","_handlePause","addEventListener","reg","getStatus","setItem","getItem","setSpeed","getSpeed","setVolume","getVolume","setPlaying","getPlaying","setCurrentTime","getCurrentTime","getDuration","getPlaylist","pub","paused","playbackRate","_updateCurrentTimeForItem","removeEventListener","currentTimeIntervalId","ended","statusObj","_handleCurrentTimeUpdate","realm","component","enc","itm1","itm2","canplaythroughFun","errorFun","src","_setSource","URL","timeoutId","delayedSpeedTimeoutId","clearTimeout","_delayedSpeedUpdate","resChannel","delayedVolumeTimeoutId","_delayedVolumeUpdate","pause","resItem","paued","delayedCurrentTimeTimeoutId","_delayedCurrentTimeUpdate","InfoPresenter","networkSaveData","NetworkTest","saveData","networkType","networkAccess","fssTemp","tempUsage","tempQuota","fssPers","persUsage","persQuota","fun","_promisedPubSub","reqTopic","reqData","funRes","NaN","logout","networkIcon","networkPolicy","tempPrimText","tempSecText","persPrimText","persSecText","leftIcon","_handleLogout","fileSystemSize","storageInfo","connection","mozConnection","webkitConnection","connectionTypeCheckFailed","connectionSaveDataCheckFailed","FileSystemFile","fsFileEntry","_fsFileEntry","createWriter","writer","onwriteend","onerror","name","fullPath","isFile","isDirectory","toURL","FileSystemDirectory","fsDirectoryEntry","_fsDirectoryEntry","directory","dirReader","createReader","entries","getEntries","readEntries","results","concat","entry","options","_getDirectory","create","_getFile","FileSystemFileSystem","fsFileSystem","_fsFileSystem","FileSystemService","requestFileSystem","_storageInfo","_requestFileSystem","path","resUQ","requestedQuota","encDb","pouchChannels","pouchdb","storage","pouchEnclosures","fssPersistent","webkitPersistentStorage","webkitRequestFileSystem","PERSISTENT","fssTemporary","webkitTemporaryStorage","TEMPORARY","np","ip","injectTapEventPlugin","ReactDOM","render","exact","InfoView","document","getElementById","process","origin","fetch","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","_attachments","att","removeAttachment","_rev","compact"],"mappings":"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","file":"static/js/main.d3181c39.chunk.js","sourcesContent":["import PubSub from 'pubsub-js';\n\nexport default class AuthenticationPresenter {\n  constructor(authenticationView) {\n    this._av = authenticationView;\n    this._cancelTokenCreds = PubSub.subscribe('ui.getCredentials.request', this._authRequest.bind(this, false));\n    this._cancelTokenNewPass = PubSub.subscribe('ui.getNewPassword.request', this._authRequest.bind(this, true));\n  }\n\n  finalize() {\n    PubSub.unsubscribe(this._cancelTokenCreds);\n    delete this._cancelTokenCreds;\n    PubSub.unsubscribe(this._cancelTokenNewPass);\n    delete this._cancelTokenNewPass;\n    delete this._av;\n  }\n\n  _authRequest(passwordOnly, topic, data) {\n    this._currentRequest = { topic: topic, data: data, passwordOnly: passwordOnly};\n    this._av.passwordOnly = passwordOnly;\n    this._av.username = '';\n    this._av.password = '';\n    this._av.open = true;\n  }\n\n  credentialsObtained() {\n    this._av.open = false;\n\n    if (this._currentRequest.passwordOnly) {\n      PubSub.publish(`ui.getNewPassword.response.${this._currentRequest.topic.split('.')[3]}`, {\n        newPassword: this._av.password\n      });\n    } else {\n      PubSub.publish(`ui.getCredentials.response.${this._currentRequest.topic.split('.')[3]}`, {\n        username: this._av.username,\n        password: this._av.password\n      });\n    }\n    delete this._currentRequest;\n  }\n}\n","import React from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\n\nimport AuthenticationPresenter from './AuthenticationPresenter';\n\nexport default class AuthenticationDialog extends React.Component {\n  state = {\n    open: false,\n    user: '',\n    pass: '',\n    passwordOnly: false\n  };\n\n  set open(value) {\n    this.setState({open: value});\n  }\n\n  set passwordOnly(value) {\n    this.setState({passwordOnly: value});\n  }\n\n  set username(value) {\n    this.setState({username: value});\n  }\n\n  get username() {\n    return this.state.user;\n  }\n\n  set password(value) {\n    this.setState({password: value});\n  }\n\n  get password() {\n    return this.state.pass;\n  }\n\n  handleClose = () => {\n    this._pres.credentialsObtained();\n  };\n\n  handleChange(prop, event) {\n    let newState = {};\n\n    newState[prop] = event.target.value;\n\n    this.setState(newState);\n  }\n\n  componentDidMount() {\n    this._pres = new AuthenticationPresenter(this);\n  }\n\n  componentWillUnmount() {\n    this._pres.finalize();\n  }\n\n  render() {\n    const actions = [\n      <FlatButton\n        label=\"Submit\"\n        primary={true}\n        keyboardFocused={true}\n        onClick={this.handleClose}\n      />,\n    ];\n\n    const usernameField = (\n      <TextField\n        id='usernameField'\n        hintText=\"username\"\n        floatingLabelText=\"username\"\n        fullWidth={true}\n        value={this.state.user}\n        onChange={this.handleChange.bind(this, 'user')}\n      />\n    );\n\n    const newPasswordRules = (\n      <p>the new password needs to contain at least 8 characters with one letter in lower case, one letter in upper case, one digit, and one punctuation mark.</p>\n    );\n\n    return (\n      <div>\n        <Dialog\n          actions={actions}\n          modal={true}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n          autoScrollBodyContent={true}\n        >\n          {this.state.passwordOnly ? newPasswordRules : usernameField}\n          <TextField\n            id='passwordField'\n            hintText={this.state.passwordOnly ? 'new password' : 'password'}\n            floatingLabelText={this.state.passwordOnly ? 'new password' : 'password'}\n            type=\"password\"\n            fullWidth={true}\n            value={this.state.pass}\n            onChange={this.handleChange.bind(this, 'pass')}\n          />\n        </Dialog>\n      </div>\n    );\n  }\n}\n","export default class NotificationPresenter {\n  constructor(view) {\n    this._view = view;\n    this._notifications = [];\n    this._regToken = NotificationPresenter.ps.sub('user.notification.showError', this.showError.bind(this));\n    this.showNextMessage();\n  }\n\n  showError(topic, data) {\n    let message = 'an error occured';\n\n    if (data && data.error && data.error.message) {\n      message = data.error.message;\n    }\n\n    this._notifications.push(message);\n    this.showNextMessage();\n  }\n\n  showNextMessage() {\n    if (!this._view) {\n      return;\n    }\n\n    if (this._showingMessage) {\n      return;\n    }\n\n    if (this._notifications.length === 0) {\n      return;\n    }\n\n    this._showingMessage = true;\n    this._view.message = this._notifications.shift();\n    this._view.show = true;\n\n    setTimeout(this.timeoutCallback.bind(this), 2000);\n  }\n\n  timeoutCallback() {\n    this._view.show = false;\n    this._showingMessage = false;\n    this.showNextMessage();\n  }\n\n  finalize() {\n    let token = this._regToken;\n    delete this._regToken;\n\n    if (token) {\n      NotificationPresenter.ps.unsub(token);\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Snackbar from 'material-ui/Snackbar';\nimport NotificationPresenter from './NotificationPresenter';\n\nexport default class NotificationView extends Component {\n  state = {\n    message: '',\n    show: false\n  };\n\n  componentDidMount() {\n    this._pres = new NotificationPresenter(this);\n  }\n\n  componentWillUnmount() {\n    this._pres.finalize();\n  }\n\n  set show(value) {\n    this.setState({show: value});\n  }\n\n  set message(value) {\n    this.setState({message: value});\n  }\n\n  render() {\n    return (\n      <Snackbar\n        open={this.state.show}\n        message={this.state.message}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport AuthenticationDialog from './AuthenticationDialog';\nimport NotificationView from './NotificationView';\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport {lightGreen800, deepOrangeA400} from 'material-ui/styles/colors';\n\nimport PubSub from 'pubsub-js';\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: lightGreen800,\n    accent1Color: deepOrangeA400,\n  }\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={muiTheme}>\n        <div>\n          <AuthenticationDialog/>\n          {this.props.children}\n          <NotificationView/>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n","import PubSub from 'pubsub-js';\nimport uuid from 'uuid';\n\nexport function promisedPubSub(topic, data) {\n  return new Promise(_promisedPubSub.bind(null, topic, data));\n}\n\nfunction _promisedPubSub(topic, data, resolve, reject) {\n  let requestId = uuid();\n  let cancelToken = PubSub.subscribe(`${topic}.response.${requestId}`, (resTopic, resData) => {\n    PubSub.unsubscribe(cancelToken);\n\n    if (resData && resData.error) {\n      reject(resData.error);\n      return;\n    }\n\n    resolve(resData);\n  });\n\n  PubSub.publish(`${topic}.request.${requestId}`, data);\n}\n","import PubSub from 'pubsub-js';\nimport {promisedPubSub as pps} from './utils';\n\nexport default class ChannelListPresenter {\n  constructor(view) {\n    this._view = view;\n    this._updateChannels();\n  }\n\n  _updateChannels() {\n    return pps('system.getAllChannels').then(res => {\n      res.channels.sort((ch1, ch2) => {\n        return ch1.title.localeCompare(ch2.title);\n      });\n      this._view.allChannels = res.channels;\n      this._view.selectedChannels = res.channels.filter(channel => {\n        return channel.selected;\n      });\n    });\n  }\n\n  goToPlayerPage() {\n    PubSub.publish('system.goToPlayerPage.request');\n  }\n\n  goToInfoPage() {\n    PubSub.publish('system.goToInfoPage.request');\n  }\n\n  addNewChannel(channelUrl) {\n    pps('system.postNewApiChannel', {url: channelUrl}).then(id => {\n      this._view.newChannelUrl = '';\n\n      return pps('system.getApiChannelById', id);\n    }).then(res => {\n      res.channel.selected = true;\n\n      return pps('system.addOrUpdateChannel', {channel: res.channel});\n    }).then(() => {\n      this._updateChannels();\n    });\n  }\n\n  updateChannelSelection(channelId, selected) {\n    pps('system.getChannelById', {id:channelId}).then(data => {\n      data.channel.selected = selected;\n\n      return pps('system.addOrUpdateChannel', data);\n    }).then(() => {\n      return this._updateChannels();\n    });\n  }\n\n  showChannel(id) {\n    PubSub.publish('system.goToChannelPage.request', {id:id});\n  }\n\n  finalize() {\n    delete this._view;\n  }\n}\n","import React, { Component } from 'react';\nimport {List, ListItem} from 'material-ui/List';\nimport TextField from 'material-ui/TextField';\nimport Checkbox from 'material-ui/Checkbox';\nimport FlatButton from 'material-ui/FlatButton';\nimport ChannelListPresenter from './ChannelListPresenter';\nimport {Tabs, Tab} from 'material-ui/Tabs';\nimport AppBar from 'material-ui/AppBar';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport IconButton from 'material-ui/IconButton';\nimport MenuIcon from 'material-ui/svg-icons/navigation/menu';\nimport MoreIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport Dialog from 'material-ui/Dialog';\n\nexport default class ChannelListView extends Component {\n  state = {\n    selectedChannels: [],\n    allChannels: [],\n    newChannelUrl: '',\n    showAddChannelDialog: false\n  };\n\n  set newChannelUrl(value) {\n    this.setState({\n      newChannelUrl: value\n    });\n  }\n\n  set selectedChannels(value) {\n    this.setState({\n      selectedChannels: value\n    });\n  }\n\n  set allChannels(value) {\n    this.setState({\n      allChannels: value\n    });\n  }\n\n  componentDidMount() {\n    this._pres = new ChannelListPresenter(this);\n  }\n\n  componentWillUnmount() {\n    this._pres.finalize();\n  }\n\n  _handleNewChannelUrl(event) {\n    this.setState({\n      newChannelUrl: event.target.value\n    });\n  }\n\n  _addNewChannel() {\n    if (this.state.newChannelUrl) {\n      this._pres.addNewChannel(this.state.newChannelUrl);\n    }\n\n    this.setState({\n      showAddChannelDialog: false,\n      newChannelUrl: ''\n    });\n  }\n\n  _handleChannelSelectChange(event, isChecked) {\n    this._pres.updateChannelSelection(event.target.value, isChecked);\n  }\n\n  _handleListItemClick(id) {\n    this._pres.showChannel(id);\n  }\n\n  render() {\n    const menuNav = <IconMenu\n      iconButtonElement={<IconButton><MenuIcon color={'#FFF'}/></IconButton>}\n      anchorOrigin={{horizontal: 'left', vertical: 'top'}}\n      targetOrigin={{horizontal: 'left', vertical: 'top'}}\n    >\n      <MenuItem primaryText=\"player\" onClick={() => {this._pres.goToPlayerPage();}}/>\n      <MenuItem primaryText=\"info\" onClick={() => {this._pres.goToInfoPage();}}/>\n    </IconMenu>;\n\n    const menuActions = <IconMenu\n      iconButtonElement={<IconButton><MoreIcon color={'#FFF'}/></IconButton>}\n      anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n      targetOrigin={{horizontal: 'right', vertical: 'top'}}\n    >\n      <MenuItem primaryText=\"add channel\" onClick={() => {\n          this.setState({\n            newChannelUrl: '',\n            showAddChannelDialog: true\n          });\n        }}/>\n    </IconMenu>\n\n    const addChannelDialogAction = [\n      <FlatButton\n        label=\"Cancel\"\n        primary={true}\n        onClick={() => {\n          this.setState({showAddChannelDialog: false});\n        }}\n      />,\n      <FlatButton\n        label=\"Submit\"\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._addNewChannel.bind(this)}\n      />,\n    ];\n\n    return (\n      <div>\n        <AppBar title=\"channels\" iconElementLeft={menuNav} iconElementRight={menuActions}/>\n        <Dialog\n          actions={addChannelDialogAction}\n          modal={false}\n          open={this.state.showAddChannelDialog}\n          onRequestClose={() => {\n            this.setState({showAddChannelDialog: false});\n          }}\n        >\n          <TextField\n            value={this.state.newChannelUrl}\n            floatingLabelText=\"new channel URL\"\n            onChange={this._handleNewChannelUrl.bind(this)}\n          />\n        </Dialog>\n        <Tabs>\n          <Tab label=\"selected\">\n            <List>\n              {this.state.selectedChannels.map(channel => {\n                return <ListItem\n                  key={channel.id}\n                  value={channel.id}\n                  primaryText={channel.title}\n                  secondaryText={channel.description}\n                  onClick={this._handleListItemClick.bind(this, channel.id)}\n                />;\n              })}\n            </List>\n          </Tab>\n          <Tab label=\"all\">\n            <List>\n              {this.state.allChannels.map(channel => {\n                return <ListItem\n                  leftCheckbox={<Checkbox\n                    checked={channel.selected}\n                    onCheck={this._handleChannelSelectChange.bind(this)}\n                    value={channel.id}\n                  />}\n                  key={channel.id}\n                  primaryText={channel.title}\n                  secondaryText={channel.description}\n                />;\n              })}\n            </List>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n","import PubSub from 'pubsub-js';\nimport {promisedPubSub as pps} from './utils';\n\nexport default class ChannelPresenter {\n  constructor(view) {\n    this._view = view;\n    this._updateState();\n  }\n\n  goToChannelListPage() {\n    PubSub.publish('system.goToChannelListPage.request');\n  }\n\n  removeDownload(channelId, itemId) {\n    return pps('system.removeEnclosureDocAndBinaryByChannelItemId', {channelId: channelId, itemId: itemId}).then(() => {\n      return this._updateState();\n    });\n  }\n\n  refreshDownload(channelId, itemId) {\n    return pps('system.removeEnclosureBinaryByChannelIdItemId', {channelId: channelId, itemId: itemId}).then(() => {\n      return pps('system.getEnclosureDocByChannelIdItemId', {channelId: channelId, itemId: itemId});\n    }).then(encDoc => {\n      if (encDoc.enclosureDoc.failed) {\n        delete encDoc.enclosureDoc.failed;\n\n        return pps('system.addOrUpdateEnclosureDoc', encDoc);\n      }\n\n      return Promise.resolve();\n    }).then(() => {\n      return this._updateState();\n    });\n  }\n\n  requestDownload(channelId, itemId) {\n    pps('system.addOrUpdateEnclosureDoc', {\n      enclosureDoc: {channelId: channelId, itemId: itemId}\n    }).then(() => {\n      return pps('system.getItemByChannelIdId', {channelId: channelId, id: itemId});\n    }).then(res => {\n      res.item.triaged = true;\n      return pps('system.addOrUpdateItem', {item: res.item});\n    }).then(() => {\n      return this._updateState();\n    });\n  }\n\n  play(channelId, itemId) {\n    return pps('system.getItemByChannelIdId', {channelId: channelId, id: itemId}).then(res => {\n      return pps('system.playerService.setItem', {item: res.item});\n    }).then(() => {\n      return pps('system.playerService.setPlaying', {playing: true});\n    }).then(() => {\n      return this._updateState();\n    });\n  }\n\n  toggleTriaged(channelId, itemId) {\n    return pps('system.getItemByChannelIdId', {channelId: channelId, id: itemId}).then(res => {\n      if (res.item.triaged) {\n        delete res.item.triaged;\n      } else {\n        res.item.triaged = true;\n      }\n\n      return pps('system.addOrUpdateItem', {item: res.item});\n    }).then(() => {\n      return this._updateState();\n    });\n  }\n\n  _updateState() {\n    return Promise.all([\n      pps('system.getItemsByChannelId', {channelId: this._view.channelId}),\n      pps('system.getEnclosureDocsByChannelId', {channelId: this._view.channelId})\n    ]).then(res => {\n      return Promise.all(res[1].enclosureDocs.map(doc => {\n        return pps('system.checkEnclosureBinaryExistsByChannelItemId', doc);\n      })).then(binExists => {\n        this._view.items = res[0].items.sort((i1, i2) => {\n          return -i1.date.localeCompare(i2.date);\n        });\n        this._view.enclosureDocs = res[1].enclosureDocs;\n        this._view.binExists = binExists;\n      });\n    });\n  }\n\n  finalize() {\n    delete this._view;\n  }\n}\n","import React, { Component } from 'react';\nimport {List, ListItem} from 'material-ui/List';\nimport Chip from 'material-ui/Chip';\nimport IconButton from 'material-ui/IconButton';\nimport NewIcon from 'material-ui/svg-icons/av/new-releases';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport Avatar from 'material-ui/Avatar';\n\nexport default class ItemList extends Component {\n  state = {\n    openItemId: null,\n    itemTree: null\n  };\n\n  _onNestedListToggle(item) {\n    this.setState({openItemId: item.props.id});\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let itemTree = nextProps.items.reduce((prev, item) => {\n      let date = new Date(item.date);\n      let month = `${date.getMonth()+1}`;\n\n      if (month.length === 1) {\n        month = `0${month}`;\n      }\n\n      let cat = `${date.getFullYear()}-${month}`;\n\n      if (!prev[cat]) {\n        prev[cat] = [];\n      }\n\n      prev[cat].push(item);\n\n      return prev;\n    }, {});\n\n    let openItemId = Object.keys(itemTree)[0];\n\n    if (itemTree[this.state.openItemId]) {\n      openItemId = this.state.openItemId;\n    }\n\n    this.setState(\n      {\n        itemTree: itemTree,\n        openItemId: openItemId\n      });\n  }\n\n  render() {\n    const iconButtonElement = (\n      <IconButton touch={true}>\n        <MoreVertIcon/>\n      </IconButton>\n    );\n\n    let listItems = [];\n\n    if (this.state.itemTree) {\n      listItems = Object.keys(this.state.itemTree).map(key => {\n        return <ListItem\n            key={key}\n            id={key}\n            secondaryText={key}\n            primaryTogglesNestedList={true}\n            onNestedListToggle={this._onNestedListToggle.bind(this)}\n            open={this.state.openItemId === key}\n            nestedItems={this.state.itemTree[key].map(item => {\n              let menuEntries = [{label: 'toggle new', onClick: () => {this.props.onToggleNew(item.channelId, item.id)}}];\n\n              const chipStyle = {margin: 4};\n\n                let patiallyPlayedChip;\n\n                if (item.currentTime) {\n                  patiallyPlayedChip = (\n                    <Chip style={chipStyle}>partially played</Chip>\n                  );\n                }\n\n                let playCountChip;\n\n                if (item.playCount) {\n                  playCountChip = (\n                    <Chip style={chipStyle}><Avatar>{item.playCount}</Avatar>times played</Chip>\n                  );\n                }\n\n                let downloadChip;\n\n                if (this.props.enclosureDocs) {\n                  let enclosureDoc = this.props.enclosureDocs.find(encDoc => {\n                    return encDoc.itemId === item.id && encDoc.channelId === item.channelId;\n                  });\n\n                  if (enclosureDoc) {\n                    let downloadStatus = 'requested';\n                    let binExistsEntry = this.props.binExists.find(be => {\n                      return be.channelId === enclosureDoc.channelId && be.itemId === enclosureDoc.itemId;\n                    });\n                    let binExists = typeof binExistsEntry !== 'undefined' && binExistsEntry.enclosureBinaryExists;\n\n                    if (enclosureDoc.failed) {\n                      downloadStatus = 'failed';\n                      menuEntries.push({label: 'refresh download', onClick: () => { this.props.onRefreshDownload(item.channelId, item.id) }});\n                    } else if (binExists) {\n                      downloadStatus = 'available';\n                      menuEntries.push({label: 'refresh download', onClick: () => { this.props.onRefreshDownload(item.channelId, item.id) }});\n                      menuEntries.push({label: 'play', onClick: () => { this.props.onPlay(item.channelId, item.id) }});\n                    }\n\n                    menuEntries.push({label: 'remove download', onClick: () => { this.props.onRemoveDownload(item.channelId, item.id) }});\n\n                    downloadChip = (\n                      <Chip style={chipStyle}>download {downloadStatus}</Chip>\n                    );\n                  } else {\n                    menuEntries.push({label: 'request download', onClick: () => { this.props.onRequestDownload(item.channelId, item.id) }});\n                  }\n                }\n\n                let newChip;\n\n                if (!item.triaged) {\n                  newChip = (\n                    <Chip style={chipStyle}><Avatar><NewIcon/></Avatar>new</Chip>\n                  );\n                }\n\n                const rightIconMenu = (\n                  <IconMenu iconButtonElement={iconButtonElement}>\n                    {menuEntries.map(ent => {\n                      return (<MenuItem key={ent.label} onClick={ent.onClick}>{ent.label}</MenuItem>);\n                    })}\n                  </IconMenu>\n                );\n\n                return <ListItem\n                  key={item.id}\n                  rightIconButton={rightIconMenu}\n                  primaryText={<div>{item.title}<div style={{display: 'flex', flexWrap: 'wrap',}}>{newChip}{patiallyPlayedChip}{playCountChip}{downloadChip}</div></div>}\n                />;\n              })}\n          />\n      });\n    }\n\n    return (\n      <List>\n        {listItems}\n      </List>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ChannelPresenter from './ChannelPresenter';\nimport IconButton from 'material-ui/IconButton';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport AppBar from 'material-ui/AppBar';\nimport BackIcon from 'material-ui/svg-icons/navigation/arrow-back';\nimport ItemList from './ItemList';\n\nexport default class ChannelView extends Component {\n  state = {\n    items: [],\n    enclosureDocs: [],\n    binExists: []\n  };\n\n  set binExists(value) {\n    this.setState({\n      binExists: value\n    });\n  }\n\n  set items(value) {\n    this.setState({\n      items: value\n    });\n  }\n\n  set enclosureDocs(value) {\n    this.setState({\n      enclosureDocs: value\n    });\n  }\n\n  get channelId() {\n    return this.props.match.params.channelId;\n  }\n\n  componentDidMount() {\n    this._pres = new ChannelPresenter(this);\n  }\n\n  componentWillUnmount() {\n    this._pres.finalize();\n  }\n\n  _play(channelId, itemId) {\n    this._pres.play(channelId, itemId);\n  }\n\n  _refreshDownload(channelId, itemId) {\n    this._pres.refreshDownload(channelId, itemId);\n  }\n\n  _requestDownload(channelId, itemId) {\n    this._pres.requestDownload(channelId, itemId);\n  }\n\n  _removeDownload(channelId, itemId) {\n    this._pres.removeDownload(channelId, itemId);\n  }\n\n  _toggleNew(channelId, itemId) {\n    this._pres.toggleTriaged(channelId, itemId);\n  }\n\n  render() {\n    const backNavigation = (\n      <IconButton touch={true} onClick={() => {this._pres.goToChannelListPage();}}>\n        <BackIcon/>\n      </IconButton>\n    );\n\n    return (\n      <div>\n        <AppBar title=\"channel\" iconElementLeft={backNavigation}/>\n        <ItemList\n          items={this.state.items}\n          enclosureDocs={this.state.enclosureDocs}\n          binExists={this.state.binExists}\n          onToggleNew={this._toggleNew.bind(this)}\n          onPlay={this._play.bind(this)}\n          onRefreshDownloads={this._refreshDownload.bind(this)}\n          onRemoveDownload={this._removeDownload.bind(this)}\n          onRequestDownload={this._requestDownload.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import PubSub from 'pubsub-js';\nimport {promisedPubSub as pps} from './utils';\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\n\nexport default class AuthenticationService {\n  constructor() {\n    this._userPoolId = 'eu-central-1_jUeKzeHCz';\n    this._clientId = '2l07nc0987v932rhiaqrl2c294';\n    PubSub.subscribe('system.getIdToken.request', this._getIdToken.bind(this));\n    PubSub.subscribe('system.logout.request', this._logout.bind(this));\n  }\n\n  _logout(topic, data) {\n    let userPool = new CognitoUserPool({\n      UserPoolId : this._userPoolId,\n      ClientId : this._clientId\n    });\n\n    if (userPool.getCurrentUser()) {\n      userPool.getCurrentUser().signOut();\n    }\n\n    PubSub.publish(`system.logout.response.${topic.split('.')[3]}`);\n  }\n\n  _getCurrentIdToken() {\n    return new Promise((resolve, reject) => {\n      let userPool = new CognitoUserPool({\n        UserPoolId : this._userPoolId,\n        ClientId : this._clientId\n      });\n\n      userPool.getCurrentUser().getSession((error, session) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(session.getIdToken().jwtToken);\n      });\n    });\n  }\n\n  _authenticate() {\n    return pps('ui.getCredentials').then(creds => {\n      return new Promise((resolve, reject) => {\n        let authenticationDetails = new AuthenticationDetails({\n            Username : creds.username,\n            Password : creds.password,\n        });\n        let userPool = new CognitoUserPool({\n          UserPoolId : this._userPoolId,\n          ClientId : this._clientId\n        });\n        let userData = {\n            Username : creds.username,\n            Pool : userPool\n        };\n        let cognitoUser = new CognitoUser(userData);\n\n        cognitoUser.authenticateUser(authenticationDetails, {\n          onSuccess: function (result) {\n            // User authentication was successful\n            resolve(result.getIdToken().jwtToken);\n          },\n          onFailure: function(err) {\n            // User authentication was not successful\n            reject(err);\n          },\n          newPasswordRequired: function(userAttributes, requiredAttributes) {\n            // User was signed up by an admin and must provide new\n            // password and required attributes, if any, to complete\n            // authentication.\n            pps('ui.getNewPassword').then(resNewPassword => {\n              // the api doesn't accept this field back\n              delete userAttributes.email_verified;\n\n              // Get these details and call\n              cognitoUser.completeNewPasswordChallenge(resNewPassword.newPassword, userAttributes, this);\n            }).catch(e => {\n              reject(e);\n            });\n          }\n        });\n      });\n    });\n  }\n\n  _getIdToken(topic, data) {\n    this._currentRequest = {topic: topic, data: data};\n\n    this._getCurrentIdToken().catch(err => {\n      return this._authenticate();\n    }).then(idToken => {\n      PubSub.publish(`system.getIdToken.response.${this._currentRequest.topic.split('.')[3]}`, {\n        idToken: idToken\n      });\n    });\n  }\n}\n","import PubSub from 'pubsub-js';\n\nexport default class ConsoleLogger {\n  constructor() {\n    PubSub.subscribe('ui', this._logMessage.bind(this));\n    PubSub.subscribe('system', this._logMessage.bind(this));\n    PubSub.subscribe('event', this._logMessage.bind(this));\n    PubSub.subscribe('user', this._logMessage.bind(this));\n  }\n\n  _logMessage(topic, data) {\n    console.log({topic: topic, data: data});\n  }\n}\n","import PubSub from 'pubsub-js';\nimport {promisedPubSub as pps} from './utils';\nimport axios from 'axios';\n\nexport default class ChannelService {\n  constructor() {\n    PubSub.subscribe('system.getApiChannels.request', this._getApiChannels.bind(this));\n    PubSub.subscribe('system.getApiChannelById.request', this._getApiChannelById.bind(this));\n    PubSub.subscribe('system.postNewApiChannel.request', this._postNewApiChannel.bind(this));\n    PubSub.subscribe('system.getApiItemsByChannelId.request', this._getApiItemsByChannelId.bind(this));\n    PubSub.subscribe('system.getApiItemBlobByChannelIdId.request', this._getApiItemBlobByChannelIdId.bind(this));\n    PubSub.subscribe('system.getApiItemInfoByChannelIdId.request', this._getApiItemInfoByChannelIdId.bind(this));\n  }\n\n  _getApiItemInfoByChannelIdId(topic, data) {\n    pps('system.getIdToken').then(idToken => {\n      return axios.head(`https://internal.hochreiner.net/rss-json-service/channels/${data.channelId}/items/${data.id}`, {\n        headers: {\n          'Authorization': `Bearer ${idToken.idToken}`,\n          'Accept': 'audio/mpeg'\n        }\n      });\n    }).then(res => {\n      if (res.error) {\n        PubSub.publish(`system.getApiItemInfoByChannelIdId.response.${topic.split('.')[3]}`, {error: res.error});\n      } else {\n        PubSub.publish(`system.getApiItemInfoByChannelIdId.response.${topic.split('.')[3]}`, {info: res.headers});\n      }\n    }).catch(err => {\n      PubSub.publish(`system.getApiItemInfoByChannelIdId.response.${topic.split('.')[3]}`, {error: err});\n    });\n  }\n\n  _getApiItemBlobByChannelIdId(topic, data) {\n    pps('system.getIdToken').then(idToken => {\n      return axios.get(`https://internal.hochreiner.net/rss-json-service/channels/${data.channelId}/items/${data.id}`, {\n        headers: {\n          'Authorization': `Bearer ${idToken.idToken}`,\n          'Accept': 'audio/mpeg'\n        },\n        responseType: 'blob'\n      });\n    }).then(res => {\n      if (res.error) {\n        PubSub.publish(`system.getApiItemBlobByChannelIdId.response.${topic.split('.')[3]}`, {error: res.error});\n      } else {\n        PubSub.publish(`system.getApiItemBlobByChannelIdId.response.${topic.split('.')[3]}`, {blob: res.data});\n      }\n    }).catch(err => {\n      PubSub.publish(`system.getApiItemBlobByChannelIdId.response.${topic.split('.')[3]}`, {error: err});\n    });\n  }\n\n  _getApiItemsByChannelId(topic, data) {\n    pps('system.getIdToken').then(idToken => {\n      return axios.get(`https://internal.hochreiner.net/rss-json-service/channels/${data.channelId}/items`, {\n        headers: {'Authorization': `Bearer ${idToken.idToken}`}\n      });\n    }).then(res => {\n      PubSub.publish(`system.getApiItemsByChannelId.response.${topic.split('.')[3]}`, res.data);\n    });\n  }\n\n  _getApiChannels(topic, data) {\n    pps('system.getIdToken').then(idToken => {\n      return axios.get('https://internal.hochreiner.net/rss-json-service/channels', {\n        headers: {'Authorization': `Bearer ${idToken.idToken}`}\n      });\n    }).then(res => {\n      PubSub.publish(`system.getApiChannels.response.${topic.split('.')[3]}`, res.data);\n    });\n  }\n\n  _getApiChannelById(topic, data) {\n    pps('system.getIdToken').then(idToken => {\n      return axios.get(`https://internal.hochreiner.net/rss-json-service/channels/${data.id}`, {\n        headers: {'Authorization': `Bearer ${idToken.idToken}`}\n      });\n    }).then(res => {\n      PubSub.publish(`system.getApiChannelById.response.${topic.split('.')[3]}`, res.data);\n    });\n  }\n\n  _postNewApiChannel(topic, data) {\n    pps('system.getIdToken').then(idToken => {\n      return axios.post('https://internal.hochreiner.net/rss-json-service/channels', {\n        url: data.url\n      }, {\n        headers: {'Authorization': `Bearer ${idToken.idToken}`}\n      });\n    }).then(res => {\n      PubSub.publish(`system.postNewApiChannel.response.${topic.split('.')[3]}`, res.data);\n    });\n  }\n}\n","export default class ChannelRepository {\n  constructor(pouch, pubSub) {\n    this._pouch = pouch;\n    this._ps = pubSub;\n\n    this._ps.subscribe('system.getAllChannels.request', this.getAllChannels.bind(this));\n    this._ps.subscribe('system.getChannelById.request', this.getChannelById.bind(this));\n    this._ps.subscribe('system.getItemsByChannelId.request', this.getItemsByChannelId.bind(this));\n    this._ps.subscribe('system.getItemByChannelIdId.request', this.getItemByChannelIdId.bind(this));\n    this._ps.subscribe('system.addOrUpdateChannel.request', this.addOrUpdateChannel.bind(this));\n    this._ps.subscribe('system.addOrUpdateItem.request', this.addOrUpdateItem.bind(this));\n  }\n\n  getAllChannels(topic, data) {\n    let respId = `system.getAllChannels.response.${topic.split('.')[3]}`;\n\n    this._pouch.allDocs({\n      include_docs: true,\n      startkey: 'channels/',\n      endkey: 'channels/\\ufff0'\n    }).then(data => {\n      this._ps.publish(respId, {\n        channels: data.rows.map(row => {\n          return row.doc;\n        })\n      });\n    }).catch(err => {\n      this._ps.publish(respId, { error: err });\n    });\n  }\n\n  getItemsByChannelId(topic, data) {\n    let respId = `system.getItemsByChannelId.response.${topic.split('.')[3]}`;\n\n    this._pouch.allDocs({\n      include_docs: true,\n      startkey: `items/${data.channelId}/`,\n      endkey: `items/${data.channelId}/\\ufff0`\n    }).then(data => {\n      this._ps.publish(respId, {\n        items: data.rows.map(row => {\n          return row.doc;\n        })\n      });\n    }).catch(err => {\n      this._ps.publish(respId, { error: err });\n    });\n  }\n\n  getItemByChannelIdId(topic, data) {\n    let respId = `system.getItemByChannelIdId.response.${topic.split('.')[3]}`;\n\n    this._pouch.get(`items/${data.channelId}/${data.id}`).then(item => {\n      this._ps.publish(respId, {item: item});\n    }).catch(err => {\n      this._ps.publish(respId, { error: err });\n    });\n  }\n\n  getChannelById(topic, data) {\n    let respId = `system.getChannelById.response.${topic.split('.')[3]}`;\n\n    this._pouch.get(`channels/${data.id}`).then(channel => {\n      this._ps.publish(respId, {channel: channel});\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n\n  addOrUpdateChannel(topic, data) {\n    let respId = `system.addOrUpdateChannel.response.${topic.split('.')[3]}`;\n    let channel = data.channel;\n\n    channel._id = `channels/${channel.id}`;\n\n    this._pouch.put(channel).then(() => {\n      this._ps.publish(respId);\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n\n  addOrUpdateItem(topic, data) {\n    let respId = `system.addOrUpdateItem.response.${topic.split('.')[3]}`;\n    let item = data.item;\n\n    if (!item.channelId) {\n      this._ps.publish(respId, {error: new Error('Item has no channel id.')});\n      return;\n    }\n\n    item._id = `items/${item.channelId}/${item.id}`;\n\n    this._pouch.put(item).then(() => {\n      this._ps.publish(respId);\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n}\n","export function mergePropertiesFromObject(mainObj, props, suppObj) {\n  let update = false;\n\n  props.forEach(prop => {\n    if (!suppObj[prop]) {\n      return;\n    }\n\n    if (JSON.stringify(mainObj[prop]) === JSON.stringify(suppObj[prop])) {\n      return;\n    }\n\n    mainObj[prop] = suppObj[prop];\n    update = true;\n  });\n\n  return update;\n}\n","import PubSub from 'pubsub-js';\nimport {promisedPubSub as pps} from './utils';\nimport {mergePropertiesFromObject} from './objectMerger';\n\nexport default class ChannelSyncService {\n  constructor() {\n    PubSub.subscribe('system.syncChannels.request', this.syncChannels.bind(this));\n  }\n\n  syncChannels(topic, data) {\n    let respId = `system.syncChannels.response.${topic.split('.')[3]}`;\n\n    Promise.all([\n      pps('system.getApiChannels'),\n      pps('system.getAllChannels')\n    ]).then(res => {\n      let completeList = {};\n      let apiChannels = res[0].channels;\n      let localChannels = res[1].channels;\n\n      apiChannels.forEach(channel => {\n        completeList[channel.id] = true;\n      });\n      localChannels.forEach(channel => {\n        completeList[channel.id] = true;\n      });\n\n      return Promise.all(Object.keys(completeList).map(channelId => {\n        let apiChannel = apiChannels.find(channel => { return channel.id === channelId});\n        let localChannel = localChannels.find(channel => { return channel.id === channelId});\n\n        if (apiChannel && localChannel) {\n          if (mergePropertiesFromObject(localChannel, ['title', 'description', 'url'], apiChannel)) {\n            return pps('system.addOrUpdateChannel', {\n              channel: localChannel\n            }).catch(err => {\n              PubSub.publish('system.log.error', {error: err});\n            });\n          }\n        } else if (apiChannel) {\n          return pps('system.addOrUpdateChannel', {\n            channel: apiChannel\n          }).catch(err => {\n            PubSub.publish('system.log.error', {error: err});\n          });\n        } else if (localChannel) {\n          return pps('system.postNewApiChannel', {url: localChannel.url}).then(() => {\n            return pps('system.getApiChannelById', {id: localChannel.id});\n          }).then(res => {\n            if (mergePropertiesFromObject(localChannel, ['title', 'description', 'url'], res.channel)) {\n              return pps('system.addOrUpdateChannel', {\n                channel: localChannel\n              });\n            }\n          }).catch(err => {\n            PubSub.publish('system.log.error', {error: err});\n          });\n        }\n      }).filter(channel => { return typeof channel !== 'undefined'; }));\n    }).then(() => {\n      return pps('system.getAllChannels');\n    }).then(res => {\n      return Promise.all(res.channels.filter(channel => {\n        return channel.selected;\n      }).map(channel => {\n        return Promise.all([\n          pps('system.getApiItemsByChannelId', {channelId: channel.id}),\n          pps('system.getItemsByChannelId', {channelId: channel.id}),\n        ]).then(itemRes => {\n          let newProms = [];\n          let apiItems = itemRes[0].items;\n          let localItems = itemRes[1].items;\n\n          apiItems.forEach(apiItem => {\n            let localItem = localItems.find(itm => { return itm.id === apiItem.id; });\n\n            if (!localItem) {\n              apiItem.channelId = channel.id;\n              newProms.push(pps('system.addOrUpdateItem', {item:apiItem}));\n            } else {\n              if (mergePropertiesFromObject(localItem, ['title', 'date', 'enclosure'], apiItem)) {\n                newProms.push(pps('system.addOrUpdateItem', {item:localItem}));\n              }\n            }\n          });\n\n          return Promise.all(newProms);\n        });\n      }));\n    }).then(() => {\n      PubSub.publish(respId, {});\n    }).catch(err => {\n      PubSub.publish(respId, {error: err});\n    });\n  }\n}\n","import { HashRouter as Router } from 'react-router-dom';\nimport PubSub from 'pubsub-js';\n\nexport default class NavigationService {\n  constructor() {\n    PubSub.subscribe('system.goToPlayerPage.request', this.goToPlayerPage.bind(this));\n    PubSub.subscribe('system.goToChannelListPage.request', this.goToChannelListPage.bind(this));\n    PubSub.subscribe('system.goToChannelPage.request', this.goToChannelPage.bind(this));\n    PubSub.subscribe('system.goToInfoPage.request', this.goToInfoPage.bind(this));\n  }\n\n  goToChannelPage(topic, data) {\n    (new Router()).history.push(`/channels/${data.id}`);\n  }\n\n  goToChannelListPage(topic, data) {\n    (new Router()).history.push(`/channels`);\n  }\n\n  goToPlayerPage(topic, data) {\n    (new Router()).history.push(`/player`);\n  }\n\n  goToInfoPage(topic, data) {\n    (new Router()).history.push(`/info`);\n  }\n}\n","export default class EnclosureRepository {\n  constructor(pouch, pubSub, fss) {\n    this._pouch = pouch;\n    this._ps = pubSub;\n    this._fss = fss;\n\n    this._ps.subscribe('system.getAllEnclosureDocs.request', this.getAllEnclosureDocs.bind(this));\n    this._ps.subscribe('system.getEnclosureDocsByChannelId.request', this.getEnclosureDocsByChannelId.bind(this));\n    this._ps.subscribe('system.getEnclosureDocByChannelIdItemId.request', this.getEnclosureDocByChannelIdItemId.bind(this));\n    this._ps.subscribe('system.removeEnclosureBinaryByChannelIdItemId.request', this.removeEnclosureBinaryByChannelIdItemId.bind(this));\n    this._ps.subscribe('system.addOrUpdateEnclosureDoc.request', this.addOrUpdateEnclosureDoc.bind(this));\n    this._ps.subscribe('system.addOrUpdateEnclosureBinary.request', this.addOrUpdateEnclosureBinary.bind(this));\n    this._ps.subscribe('system.removeEnclosureDocAndBinaryByChannelItemId.request', this.removeEnclosureDocAndBinaryByChannelItemId.bind(this));\n    this._ps.subscribe('system.checkEnclosureBinaryExistsByChannelItemId.request', this.checkEnclosureBinaryExistsByChannelItemId.bind(this));\n  }\n\n  checkEnclosureBinaryExistsByChannelItemId(topic, data) {\n    let respId = `system.checkEnclosureBinaryExistsByChannelItemId.response.${topic.split('.')[3]}`;\n\n    return this._fss.getFileSystem().then(res => {\n      return res.root.getDirectory('enclosures');\n    }).then(res => {\n      return res.getDirectory(data.channelId);\n    }).then(res => {\n      return res.getFile(data.itemId);\n    }).then(res => {\n      this._ps.publish(respId, {\n        channelId: data.channelId,\n        itemId: data.itemId,\n        enclosureBinaryExists: true\n      });\n    }).catch(err => {\n      this._ps.publish(respId, {\n        channelId: data.channelId,\n        itemId: data.itemId,\n        enclosureBinaryExists: false\n      });\n    });\n  }\n\n  getAllEnclosureDocs(topic, data) {\n    let respId = `system.getAllEnclosureDocs.response.${topic.split('.')[3]}`;\n\n    this._pouch.allDocs({\n      include_docs: true\n    }).then(data => {\n      this._ps.publish(respId, {\n        enclosureDocs: data.rows.map(row => {\n          return row.doc;\n        })\n      });\n    }).catch(err => {\n      this._ps.publish(respId, { error: err });\n    });\n  }\n\n  getEnclosureDocsByChannelId(topic, data) {\n    let respId = `system.getEnclosureDocsByChannelId.response.${topic.split('.')[3]}`;\n\n    this._pouch.allDocs({\n      include_docs: true,\n      startkey: `enclosures/${data.channelId}/`,\n      endkey: `enclosures/${data.channelId}/\\ufff0`\n    }).then(data => {\n      this._ps.publish(respId, {\n        enclosureDocs: data.rows.map(row => {\n          return row.doc;\n        })\n      });\n    }).catch(err => {\n      this._ps.publish(respId, { error: err });\n    });\n  }\n\n  getEnclosureDocByChannelIdItemId(topic, data) {\n    let respId = `system.getEnclosureDocByChannelIdItemId.response.${topic.split('.')[3]}`;\n\n    this._pouch.get(`enclosures/${data.channelId}/${data.itemId}`).then(enclDoc => {\n      this._ps.publish(respId, {enclosureDoc: enclDoc});\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n\n  addOrUpdateEnclosureDoc(topic, data) {\n    let respId = `system.addOrUpdateEnclosureDoc.response.${topic.split('.')[3]}`;\n    let enclDoc = data.enclosureDoc;\n\n    enclDoc._id = `enclosures/${enclDoc.channelId}/${enclDoc.itemId}`;\n\n    this._pouch.put(enclDoc).then(() => {\n      this._ps.publish(respId);\n    }).catch(err => {\n      if (err.status === 409) {\n        this._ps.publish(respId);\n      } else {\n        this._ps.publish(respId, {error: err});\n      }\n    });\n  }\n\n  addOrUpdateEnclosureBinary(topic, data) {\n    let respId = `system.addOrUpdateEnclosureBinary.response.${topic.split('.')[3]}`;\n\n    this._fss.getFileSystem().then(res => {\n      return res.root.createDirectory('enclosures');\n    }).then(res => {\n      return res.createDirectory(data.channelId);\n    }).then(res => {\n      return res.createFile(data.itemId);\n    }).then(res => {\n      return res.write(data.enclosure);\n    }).then(() => {\n      this._ps.publish(respId);\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n\n  _removeEnclosureBinaryByChannelIdItemId(channelId, itemId) {\n    return this._fss.getFileSystem().then(res => {\n      return res.root.getDirectory('enclosures');\n    }).then(res => {\n      return res.getDirectory(channelId);\n    }).then(res => {\n      return res.getFile(itemId);\n    }).then(res => {\n      return res.remove();\n    });\n  }\n\n  removeEnclosureBinaryByChannelIdItemId(topic, data) {\n    let respId = `system.removeEnclosureBinaryByChannelIdItemId.response.${topic.split('.')[3]}`;\n\n    this._removeEnclosureBinaryByChannelIdItemId(data.channelId, data.itemId).then(() => {\n      this._ps.publish(respId);\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n\n  removeEnclosureDocAndBinaryByChannelItemId(topic, data) {\n    let respId = `system.removeEnclosureDocAndBinaryByChannelItemId.response.${topic.split('.')[3]}`;\n\n    this._pouch.get(`enclosures/${data.channelId}/${data.itemId}`).then(enclDoc => {\n      return this._pouch.remove(enclDoc);\n    }).then(() => {\n      return this._removeEnclosureBinaryByChannelIdItemId(data.channelId, data.itemId);\n    }).then(() => {\n      this._ps.publish(respId);\n    }).catch(err => {\n      this._ps.publish(respId, {error: err});\n    });\n  }\n}\n","export default class UpdateDaemon {\n  constructor(ps, nt, fss) {\n    this.ps = ps;\n    this.nt = nt;\n    this.fss = fss;\n    this.currentlyRunning = false;\n    setInterval(this.tick.bind(this), 30 * 1000);\n  }\n\n  tick() {\n    if (this.currentlyRunning) {\n      return;\n    }\n\n    if (!this.nt.shouldAccessNetwork) {\n      return;\n    }\n\n    this.currentlyRunning = true;\n\n    this.ps.prom('system.getAllEnclosureDocs').then(resEncDocs => {\n      let docs = resEncDocs.enclosureDocs.filter(encDoc => {\n        return !encDoc.failed;\n      });\n\n      return Promise.all(docs.map(doc => {\n        return this.ps.prom('system.checkEnclosureBinaryExistsByChannelItemId', doc);\n      })).then(filter => {\n        docs = docs.filter((doc, idx) => {\n          return !filter[idx].enclosureBinaryExists;\n        });\n\n        if (docs.length === 0) {\n          return;\n        }\n\n        return Promise.all([\n          this.ps.prom('system.getApiItemInfoByChannelIdId', {\n            channelId: docs[0].channelId,\n            id: docs[0].itemId\n          }),\n          this.fss.queryUsageAndQuota()\n        ]).then(res => {\n          let requiredSpace = parseInt(res[0].info['content-length'], 10) + res[1].usage;\n\n          if (requiredSpace < res[1].quota) {\n            return Promise.resolve();\n          }\n\n          return this.fss.requestQuota(Math.max(Math.round(requiredSpace * 1.2), 1024 * 1024 * 1024 * 1)).then(resQuota => {\n            if (requiredSpace < resQuota.quota) {\n              return Promise.resolve();\n            }\n\n            return Promise.failed(new Error('not enough space'));\n          });\n        }).then(() => {\n          return this.ps.prom('system.getApiItemBlobByChannelIdId', {\n            channelId: docs[0].channelId,\n            id: docs[0].itemId\n          });\n        }).then(res => {\n          return this.ps.prom('system.addOrUpdateEnclosureBinary', {\n            channelId: docs[0].channelId,\n            itemId: docs[0].itemId,\n            enclosure: res.blob\n          });\n        }).then(() => {\n          return this.ps.prom('system.getEnclosureDocByChannelIdItemId', {\n            channelId: docs[0].channelId,\n            itemId: docs[0].itemId\n          }).then(resDoc => {\n            if (resDoc.enclosureDoc.failed) {\n              delete resDoc.enclosureDoc.failed;\n              return this.ps.prom('system.addOrUpdateEnclosureDoc', resDoc);\n            } else {\n              return Promise.resolve();\n            }\n          });\n        }).catch(err => {\n          return this.ps.prom('system.getEnclosureDocByChannelIdItemId', {\n            channelId: docs[0].channelId,\n            itemId: docs[0].itemId\n          }).then(resDoc => {\n            resDoc.enclosureDoc.failed = true;\n\n            return this.ps.prom('system.addOrUpdateEnclosureDoc', resDoc);\n          });\n        });\n      });\n    }).then(() => {\n      let oldLastSync = this.lastSync;\n      this.lastSync = (new Date()).toISOString().substr(0, 10);\n\n      if (oldLastSync !== this.lastSync) {\n        return this.ps.prom('system.syncChannels');\n      }\n\n      return Promise.resolve();\n    }).then(() => {\n      this.currentlyRunning = false;\n    }).catch(err => {\n      this.currentlyRunning = false;\n    });\n  }\n}\n","import PubSub from 'pubsub-js';\nimport {promisedPubSub as pps} from './utils';\n\nexport default class PlayerPresenter {\n  constructor(view) {\n    this._view = view;\n\n    this._statusToken = PubSub.subscribe('system.playerService.statusChanged', this._handleStatusChange.bind(this));\n    this._updateCurrentState().catch(err => {\n      PubSub.publish('user.notification.showError', {error: err});\n    });\n  }\n\n  _updateCurrentState() {\n    return pps('system.playerService.getStatus').then(res => {\n      this._handleStatusChange(null, res);\n    });\n  }\n\n  refreshEnclosure(item) {\n    return pps('system.removeEnclosureBinaryByChannelIdItemId', {\n      channelId: item.channelId,\n      itemId: item.id\n    }).then(() => {\n      return pps('system.playerService.getStatus');\n    }).then(res => {\n      this._handleStatusChange(null, res);\n    });\n  }\n\n  deleteEnclosure(item) {\n    return pps('system.removeEnclosureDocAndBinaryByChannelItemId', {\n      channelId: item.channelId,\n      itemId: item.id\n    }).then(() => {\n      return pps('system.playerService.getStatus');\n    }).then(res => {\n      this._handleStatusChange(null, res);\n    });\n  }\n\n  goToChannelListPage() {\n    PubSub.publish('system.goToChannelListPage.request');\n  }\n\n  goToInfoPage() {\n    PubSub.publish('system.goToInfoPage.request');\n  }\n\n  selectedItemChanged(item) {\n    return pps('system.playerService.setItem', {item: item}).then(() => {\n      return this._updateCurrentState();\n    }).catch(error => {\n      let message = 'error loading item';\n\n      if (error.message) {\n        message = error.message;\n      }\n\n      PubSub.publish('user.notification.showError', {error: {message: message}});\n    });\n  }\n\n  volumeChanged(volume) {\n    pps('system.playerService.setVolume', {volume: volume});\n  }\n\n  speedChanged(speed) {\n    pps('system.playerService.setSpeed', {speed: speed});\n  }\n\n  currentTimeChanged(currentTime) {\n    pps('system.playerService.setCurrentTime', {currentTime: currentTime});\n  }\n\n  start() {\n    return pps('system.playerService.setPlaying', {playing: true}).then(() => {\n      this._view.playing = true;\n\n      if (!this._intervalCancelToken) {\n        this._intervalCancelToken = setInterval(this._updateCurrentTime.bind(this), 1000);\n      }\n    });\n  }\n\n  stop() {\n    let token = this._intervalCancelToken;\n    delete this._intervalCancelToken;\n    clearInterval(token);\n\n    return pps('system.playerService.setPlaying', {playing: false}).then(res => {\n      this._view.playing = false;\n    });\n  }\n\n  _updateCurrentTime() {\n    pps('system.playerService.getCurrentTime').then(res => {\n      this._view.currentTime = res.currentTime;\n    });\n  }\n\n  _handleStatusChange(topic, res) {\n    this._view.playing = res.status.playing;\n    this._view.selectedItem = res.status.item;\n    this._view.duration = res.status.duration;\n    this._view.currentTime = res.status.currentTime;\n    this._view.volume = res.status.volume;\n    this._view.speed = res.status.speed;\n    this._view.items = res.status.playlist;\n\n    if (this._intervalCancelToken && !res.status.playing) {\n      let token = this._intervalCancelToken;\n      delete this._intervalCancelToken;\n      clearInterval(token);\n    }\n\n    if (!this._intervalCancelToken && res.status.playing) {\n      this._intervalCancelToken = setInterval(this._updateCurrentTime.bind(this), 1000);\n    }\n  }\n\n  finalize() {\n    PubSub.unsubscribe(this._statusToken);\n\n    if (this._intervalCancelToken) {\n      clearInterval(this._intervalCancelToken);\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport {List, ListItem} from 'material-ui/List';\nimport PlayerPresenter from './PlayerPresenter';\nimport {Toolbar, ToolbarGroup} from 'material-ui/Toolbar';\nimport AppBar from 'material-ui/AppBar';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport IconButton from 'material-ui/IconButton';\nimport MenuIcon from 'material-ui/svg-icons/navigation/menu';\nimport SpeedHighIcon from 'material-ui/svg-icons/av/fast-forward';\nimport SpeedLowIcon from 'material-ui/svg-icons/av/play-arrow';\nimport VolumeHighIcon from 'material-ui/svg-icons/av/volume-up';\nimport VolumeLowIcon from 'material-ui/svg-icons/av/volume-down';\nimport PlayIcon from 'material-ui/svg-icons/av/play-circle-filled';\nimport PauseIcon from 'material-ui/svg-icons/av/pause-circle-filled';\nimport Slider from 'material-ui/Slider';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport './PlayerView.css';\n\nexport default class PlayerView extends Component {\n  state = {\n    items: [],\n    selectedItem: null,\n    playing: false,\n    volume: 0.5,\n    speed: 1.0,\n    currentTime: 0,\n    duration: 0\n  };\n\n  componentDidMount() {\n    this._pres = new PlayerPresenter(this);\n  }\n\n  componentWillUnmount() {\n    this._pres.finalize();\n  }\n\n  set items(value) {\n    this.setState({\n      items: value\n    });\n  }\n\n  set selectedItem(value) {\n    this.setState({\n      selectedItem: value\n    });\n  }\n\n  set playing(value) {\n    this.setState({\n      playing: value\n    });\n  }\n\n  set volume(value) {\n    this.setState({\n      volume: value\n    });\n  }\n\n  set speed(value) {\n    this.setState({\n      speed: value\n    });\n  }\n\n  get currentTime() {\n    return this.state.currentTime;\n  }\n\n  set currentTime(value) {\n    this.setState({ currentTime: value });\n  }\n\n  set duration(value) {\n    this.setState({ duration: value });\n  }\n\n  _handleListItemClick(item) {\n    this._pres.selectedItemChanged(item);\n  }\n\n  _handleVolumeChange(event, value) {\n    this.setState({ volume: value });\n    this._pres.volumeChanged(value);\n  }\n\n  _handleSpeedChange(event, value) {\n    this.setState({ speed: value });\n    this._pres.speedChanged(value);\n  }\n\n  _handleCurrentTimeChange(event, value) {\n    this.setState({ currentTime: value });\n    this._pres.currentTimeChanged(value);\n  }\n\n  _handleEnclosureRefresh(item, event) {\n    this._pres.refreshEnclosure(item);\n  }\n\n  _handleEnclosureDelete(item, event) {\n    this._pres.deleteEnclosure(item);\n  }\n\n  _formatTime(value) {\n    let sec = `${Math.round(value % 60)}`;\n    let min = `${Math.floor(value / 60)}`;\n\n    if (sec.length === 1) {\n      sec = '0' + sec;\n    }\n\n    if (min.length === 1) {\n      min = '0' + min;\n    }\n\n    return `${min}:${sec}`;\n  }\n\n  render() {\n    const menu = <IconMenu\n      iconButtonElement={<IconButton><MenuIcon color={'#FFF'}/></IconButton>}\n      anchorOrigin={{horizontal: 'left', vertical: 'top'}}\n      targetOrigin={{horizontal: 'left', vertical: 'top'}}\n    >\n      <MenuItem primaryText=\"channels\" onClick={() => {this._pres.goToChannelListPage();}}/>\n      <MenuItem primaryText=\"info\" onClick={() => {this._pres.goToInfoPage();}}/>\n    </IconMenu>;\n\n    let itemMenu = (item) => {\n      return (<IconMenu\n        iconButtonElement={<IconButton><MoreVertIcon /></IconButton>}\n        anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n        targetOrigin={{horizontal: 'right', vertical: 'top'}}\n      >\n        <MenuItem primaryText=\"refresh\" onClick={this._handleEnclosureRefresh.bind(this, item)}/>\n        <MenuItem primaryText=\"delete\" onClick={this._handleEnclosureDelete.bind(this, item)} />\n      </IconMenu>);\n    }\n\n    const playButton = (\n      <IconButton\n        disabled={!this.state.selectedItem || this.state.playing}\n        onClick={() => {this._pres.start()}}\n      >\n        <PlayIcon/>\n      </IconButton>\n    );\n\n    const pauseButton = (\n      <IconButton\n        disabled={!this.state.selectedItem || !this.state.playing}\n        onClick={() => {this._pres.stop()}}\n      >\n        <PauseIcon/>\n      </IconButton>\n    );\n\n    let pausePlayButton = this.state.playing ? pauseButton : playButton;\n\n    return (\n      <div>\n        <AppBar title=\"player\" iconElementLeft={menu}/>\n        <Toolbar>\n          <ToolbarGroup firstChild={true}>\n            {pausePlayButton}\n            {this.state.selectedItem ? this.state.selectedItem.title : ''}\n          </ToolbarGroup>\n        </Toolbar>\n        <div className=\"sliderGroup\">\n          <table>\n            <tbody>\n              <tr>\n                <td>{this._formatTime(this.state.currentTime)}</td>\n                <td className=\"sliderColumn\"><Slider min={0} max={this.state.duration} step={1} value={this.state.currentTime} onChange={this._handleCurrentTimeChange.bind(this)}/></td>\n                <td>{this._formatTime(this.state.duration)}</td>\n              </tr>\n              <tr>\n                <td><VolumeLowIcon/></td>\n                <td className=\"sliderColumn\"><Slider min={0} max={1} step={0.01} value={this.state.volume} onChange={this._handleVolumeChange.bind(this)}/></td>\n                <td><VolumeHighIcon/></td>\n              </tr>\n              <tr>\n                <td><SpeedLowIcon/></td>\n                <td className=\"sliderColumn\"><Slider min={0.5} max={2} step={0.05} value={this.state.speed} onChange={this._handleSpeedChange.bind(this)}/></td>\n                <td><SpeedHighIcon/></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <List>\n          {this.state.items.map(item => {\n            return <ListItem\n              key={item.id}\n              primaryText={item.title}\n              onClick={this._handleListItemClick.bind(this, item)}\n              rightIconButton={itemMenu(item)}\n            />;\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n","export default class PlayerService {\n  constructor(ps, fss) {\n    this.ps = ps;\n    this.fss = fss;\n    this.audio = new Audio();\n    this._handlePlayFun = this._handlePlay.bind(this);\n    this._handlePauseFun = this._handlePause.bind(this);\n    this.audio.addEventListener('play', this._handlePlayFun);\n    this.ps.reg('system.playerService.getStatus', this.getStatus.bind(this));\n    this.ps.reg('system.playerService.setItem', this.setItem.bind(this));\n    this.ps.reg('system.playerService.getItem', this.getItem.bind(this));\n    this.ps.reg('system.playerService.setSpeed', this.setSpeed.bind(this));\n    this.ps.reg('system.playerService.getSpeed', this.getSpeed.bind(this));\n    this.ps.reg('system.playerService.setVolume', this.setVolume.bind(this));\n    this.ps.reg('system.playerService.getVolume', this.getVolume.bind(this));\n    this.ps.reg('system.playerService.setPlaying', this.setPlaying.bind(this));\n    this.ps.reg('system.playerService.getPlaying', this.getPlaying.bind(this));\n    this.ps.reg('system.playerService.setCurrentTime', this.setCurrentTime.bind(this));\n    this.ps.reg('system.playerService.getCurrentTime', this.getCurrentTime.bind(this));\n    this.ps.reg('system.playerService.getDuration', this.getDuration.bind(this));\n    this.ps.reg('system.playerService.getPlaylist', this.getPlaylist.bind(this));\n\n    this.getPlaylist().then(res => {\n      if (res.playlist.length === 0) {\n        return;\n      }\n\n      return this.setItem(null, null, null, null, {item: res.playlist[0]}).then(() => {\n        this.ps.pub('system.playerService.statusChanged', {status: {\n          playlist: res.playlist,\n          item: res.playlist[0],\n          playing: !this.audio.paused,\n          speed: this.audio.playbackRate,\n          volume: this.audio.volume,\n          currentTime: this.audio.currentTime,\n          duration: this.audio.duration\n        }});\n      });\n    });\n  }\n\n  _handleCurrentTimeUpdate() {\n    return this._updateCurrentTimeForItem(this.audio.currentTime, this.item);\n  }\n\n  _handlePause() {\n    this.audio.removeEventListener('pause', this._handlePauseFun);\n\n    if (this.currentTimeIntervalId) {\n      clearInterval(this.currentTimeIntervalId);\n    }\n\n    if (!this.audio.ended) {\n      return this._updateCurrentTimeForItem(this.audio.currentTime, this.item).then(() => {\n        return this.getStatus();\n      }).then(res => {\n        this.ps.pub('system.playerService.statusChanged', res);\n        this.audio.addEventListener('play', this._handlePlayFun);\n      });\n    }\n\n    let statusObj = {};\n\n    return this.ps.prom('system.getItemByChannelIdId', {id: this.item.id, channelId: this.item.channelId}).then(res => {\n      let item = res.item;\n\n      delete item.currentTime;\n\n      if (item.playCount) {\n        item.playCount += 1;\n      } else {\n        item.playCount = 1;\n      }\n\n      return this.ps.prom('system.addOrUpdateItem', {item: item});\n    }).then(() => {\n      return this.getPlaylist();\n    }).then(res => {\n      statusObj.playlist = res.playlist;\n      statusObj.item = res.playlist[0];\n      return this.setItem(null, null, null, null, {item:res.playlist[0]});\n    }).then(() => {\n      return this.setPlaying(null, null, null, null, {playing: true});\n    }).then(() => {\n      statusObj.playing = !this.audio.paused;\n      statusObj.speed = this.audio.playbackRate;\n      statusObj.volume = this.audio.volume;\n      statusObj.currentTime = this.audio.currentTime;\n      statusObj.duration = this.audio.duration;\n      this.ps.pub('system.playerService.statusChanged', {status: statusObj});\n    });\n  }\n\n  _handlePlay() {\n    this.audio.removeEventListener('play', this._handlePlayFun);\n    this.audio.addEventListener('pause', this._handlePauseFun);\n\n    if (!this.currentTimeIntervalId) {\n      this.currentTimeIntervalId = setInterval(this._handleCurrentTimeUpdate.bind(this), 3000);\n    }\n\n    return this.getStatus().then(res => {\n      this.ps.pub('system.playerService.statusChanged', res);\n    });\n  }\n\n  getStatus(realm, component, topic, id, data) {\n    return this.getPlaylist().then(res => {\n      return {\n        status: {\n          item: this.item,\n          speed: this.audio.playbackRate,\n          volume: this.audio.volume,\n          playing: !this.audio.paused,\n          currentTime: this.audio.currentTime,\n          duration: this.audio.duration,\n          playlist: res.playlist\n        }\n      };\n    });\n  }\n\n  getPlaylist(realm, component, topic, id, data) {\n    return this.ps.prom('system.getAllEnclosureDocs').then(res => {\n      return Promise.all(res.enclosureDocs.map(enc => {\n        return this.ps.prom('system.checkEnclosureBinaryExistsByChannelItemId', {channelId: enc.channelId, itemId: enc.itemId});\n      })).then(filter => {\n        return Promise.all(res.enclosureDocs.filter((doc, idx) => {\n          return filter[idx].enclosureBinaryExists;\n        }).map(enc => {\n          return this.ps.prom('system.getItemByChannelIdId', {channelId: enc.channelId, id: enc.itemId});\n        }));\n      });\n    }).then(res => {\n      return {\n        playlist: res.map(itm => {\n          return itm.item;\n        }).filter(itm => {\n          return typeof itm.playCount === 'undefined';\n        }).sort((itm1, itm2) => {\n          return itm1.date.localeCompare(itm2.date);\n        })\n      };\n    });\n  }\n\n  _setSource(enclosure) {\n    return new Promise((resolve, reject) => {\n      let canplaythroughFun = () => {\n        this.audio.removeEventListener('canplaythrough', canplaythroughFun);\n        this.audio.removeEventListener('error', errorFun);\n        resolve();\n      };\n      let errorFun = (e) => {\n        this.audio.removeEventListener('canplaythrough', canplaythroughFun);\n        this.audio.removeEventListener('error', errorFun);\n        reject(e);\n      };\n\n      this.audio.addEventListener('canplaythrough', canplaythroughFun);\n      this.audio.addEventListener('error', errorFun);\n\n      this.audio.src = enclosure;\n    });\n  }\n\n  setItem(realm, component, topic, id, data) {\n    this.item = data.item;\n\n    return Promise.all([\n      this.ps.prom('system.getItemByChannelIdId', {id: this.item.id, channelId: this.item.channelId}),\n      this.fss.getFileSystem().then(res => {\n        return res.root.getDirectory('enclosures');\n      }).then(res => {\n        return res.getDirectory(this.item.channelId);\n      }).then(res => {\n        return res.getFile(this.item.id);\n      }),\n      this.ps.prom('system.getChannelById', {id: this.item.channelId})\n    ]).then(res => {\n      this.item = res[0].item;\n\n      return this._setSource(res[1].URL).then(() => {\n        let channel = res[2].channel;\n\n        this.audio.currentTime = this.item.currentTime || 0;\n        this.audio.volume = channel.volume || 0.5;\n        this.audio.playbackRate = channel.speed || 1.0;\n      });\n    });\n  }\n\n  getItem(realm, component, topic, id, data) {\n    return {item: this.item};\n  }\n\n  setSpeed(realm, component, topic, id, data) {\n    this.audio.playbackRate = data.speed;\n\n    let timeoutId = this.delayedSpeedTimeoutId;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    this.delayedSpeedTimeoutId = setTimeout(this._delayedSpeedUpdate.bind(this), 1500);\n  }\n\n  _delayedSpeedUpdate() {\n    delete this.delayedSpeedTimeoutId;\n    let speed = this.audio.playbackRate;\n    let item = this.item;\n\n    if (!item || !speed) {\n      return;\n    }\n\n    return this.ps.prom('system.getChannelById', {id: item.channelId}).then(res => {\n      let resChannel = res.channel;\n\n      resChannel.speed = speed;\n\n      return this.ps.prom('system.addOrUpdateChannel', {channel: resChannel});\n    });\n  }\n\n  getSpeed(realm, component, topic, id, data) {\n    return {speed: this.audio.playbackRate};\n  }\n\n  setVolume(realm, component, topic, id, data) {\n    this.audio.volume = data.volume;\n\n    let timeoutId = this.delayedVolumeTimeoutId;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    this.delayedVolumeTimeoutId = setTimeout(this._delayedVolumeUpdate.bind(this), 1500);\n  }\n\n  _delayedVolumeUpdate() {\n    delete this.delayedVolumeTimeoutId;\n    let volume = this.audio.volume;\n    let item = this.item;\n\n    if (!item || !volume) {\n      return;\n    }\n\n    return this.ps.prom('system.getChannelById', {id: item.channelId}).then(res => {\n      let resChannel = res.channel;\n\n      resChannel.volume = volume;\n\n      return this.ps.prom('system.addOrUpdateChannel', {channel: resChannel});\n    });\n  }\n\n  getVolume(realm, component, topic, id, data) {\n    return {volume: this.audio.volume};\n  }\n\n  setPlaying(realm, component, topic, id, data) {\n    if (!this.item) {\n      return Promise.reject(new Error(\"No item set for playing.\"));\n    }\n\n    if (data.playing) {\n      this.audio.removeEventListener('play', this._handlePlayFun);\n      this.audio.play();\n      return this._handlePlay();\n    }\n\n    this.audio.removeEventListener('pause', this._handlePauseFun);\n    this.audio.pause();\n    return this._handlePause();\n  }\n\n  _updateCurrentTimeForItem(currentTime, item) {\n    return this.ps.prom('system.getItemByChannelIdId', {id: item.id, channelId: item.channelId}).then(res => {\n      let resItem = res.item;\n\n      resItem.currentTime = currentTime;\n\n      return this.ps.prom('system.addOrUpdateItem', {item: resItem});\n    });\n  }\n\n  getPlaying(realm, component, topic, id, data) {\n    return {playing: !this.audio.paued};\n  }\n\n  setCurrentTime(realm, component, topic, id, data) {\n    this.audio.currentTime = data.currentTime;\n\n    let timeoutId = this.delayedCurrentTimeTimeoutId;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    this.delayedCurrentTimeTimeoutId = setTimeout(this._delayedCurrentTimeUpdate.bind(this), 1500);\n  }\n\n  _delayedCurrentTimeUpdate() {\n    delete this.delayedCurrentTimeTimeoutId;\n    let currentTime = this.audio.currentTime;\n    let item = this.item;\n\n    if (!item || !currentTime) {\n      return;\n    }\n\n    this._updateCurrentTimeForItem(currentTime, item);\n  }\n\n  getCurrentTime(realm, component, topic, id, data) {\n    return {currentTime: this.audio.currentTime};\n  }\n\n  getDuration(realm, component, topic, id, data) {\n    return {duration: this.audio.duration};\n  }\n}\n","export default class InfoPresenter {\n  constructor(view) {\n    this._view = view;\n    this._view.networkSaveData = InfoPresenter.NetworkTest.saveData;\n    this._view.networkType = InfoPresenter.NetworkTest.type;\n    this._view.networkAccess = InfoPresenter.NetworkTest.shouldAccessNetwork;\n    InfoPresenter.fssTemp.queryUsageAndQuota().then(res => {\n      this._view.tempUsage = res.usage;\n      this._view.tempQuota = res.quota;\n    });\n    InfoPresenter.fssPers.queryUsageAndQuota().then(res => {\n      this._view.persUsage = res.usage;\n      this._view.persQuota = res.quota;\n    });\n  }\n\n  logout() {\n    InfoPresenter.ps.pub('system.logout.request');\n  }\n\n  goToPlayerPage() {\n    InfoPresenter.ps.pub('system.goToPlayerPage.request');\n  }\n\n  goToChannelListPage() {\n    InfoPresenter.ps.pub('system.goToChannelListPage.request');\n  }\n\n  finalize() {\n    delete this._view;\n  }\n}\n","export default class PubSub {\n  static pub(topic, data) {\n    PubSub.ps.publish(topic, data);\n  }\n\n  static sub(topic, fun) {\n    return PubSub.ps.subscribe(topic, fun);\n  }\n\n  static unsub(token) {\n    PubSub.ps.unsubscribe(token);\n  }\n\n  static prom(topic, data) {\n    return new Promise(PubSub._promisedPubSub.bind(null, topic, data));\n  }\n\n  static reg(topic, fun) {\n    return PubSub.sub(`${topic}.request`, (reqTopic, reqData) => {\n      let [realm, component, topic, resReq, id] = reqTopic.split('.');\n      let resTopic = `${realm}.${component}.${topic}.response.${id}`;\n\n      try {\n        let funRes = fun(realm, component, topic, id, reqData);\n\n        if (funRes && typeof funRes.then === 'function') {\n          funRes.catch(err => {\n            return {error: err};\n          }).then(res => {\n            PubSub.pub(resTopic, res);\n          });\n          return;\n        }\n\n        PubSub.pub(resTopic, funRes);\n      } catch (e) {\n        PubSub.pub(resTopic, {error: e})\n      }\n    });\n  }\n\n  static _promisedPubSub(topic, data, resolve, reject) {\n    let requestId = PubSub.uuid();\n    let cancelToken = PubSub.sub(`${topic}.response.${requestId}`, (resTopic, resData) => {\n      PubSub.unsub(cancelToken);\n\n      if (resData && resData.error) {\n        reject(resData.error);\n        return;\n      }\n\n      resolve(resData);\n    });\n\n    PubSub.pub(`${topic}.request.${requestId}`, data);\n  }\n}\n","import React, { Component } from 'react';\nimport InfoPresenter from './InfoPresenter';\nimport AppBar from 'material-ui/AppBar';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport IconButton from 'material-ui/IconButton';\nimport MenuIcon from 'material-ui/svg-icons/navigation/menu';\nimport {List, ListItem} from 'material-ui/List';\nimport NetworkAccess from 'material-ui/svg-icons/device/network-wifi';\nimport NetworkLocked from 'material-ui/svg-icons/notification/network-locked';\n\nexport default class PlayerView extends Component {\n  state = {\n    networkAccess: false,\n    networkType: '',\n    networkSaveData: '',\n    tempUsage: NaN,\n    tempQuota: NaN,\n    persUsage: NaN,\n    persQuota: NaN\n  };\n\n  set tempUsage(value) {\n    this.setState({tempUsage: value});\n  }\n\n  set tempQuota(value) {\n    this.setState({tempQuota: value});\n  }\n\n  set persUsage(value) {\n    this.setState({persUsage: value});\n  }\n\n  set persQuota(value) {\n    this.setState({persQuota: value});\n  }\n\n  set fileSystemSize(value) {\n    this.setState({fileSystemSize: value});\n  }\n\n  set storageInfo(value) {\n    this.setState({storageInfo: value});\n  }\n\n  set networkType(value) {\n    this.setState({networkType: value});\n  }\n\n  set networkSaveData(value) {\n    this.setState({networkSaveData: value});\n  }\n\n  set networkAccess(value) {\n    this.setState({networkAccess: value});\n  }\n\n  componentDidMount() {\n    this._pres = new InfoPresenter(this);\n  }\n\n  componentWillUnmount() {\n    this._pres.finalize();\n    delete this._pres;\n  }\n\n  _handleLogout() {\n    this._pres.logout();\n  }\n\n  render() {\n    const menu = <IconMenu\n      iconButtonElement={<IconButton><MenuIcon color={'#FFF'}/></IconButton>}\n      anchorOrigin={{horizontal: 'left', vertical: 'top'}}\n      targetOrigin={{horizontal: 'left', vertical: 'top'}}\n    >\n      <MenuItem primaryText=\"player\" onClick={() => {this._pres.goToPlayerPage();}}/>\n      <MenuItem primaryText=\"channels\" onClick={() => {this._pres.goToChannelListPage();}}/>\n    </IconMenu>;\n\n    let networkIcon = this.state.networkAccess ? (<NetworkAccess/>) : (<NetworkLocked/>);\n    let networkType = `Type: ${this.state.networkType}`;\n    let networkSaveData = `Save data: ${this.state.networkSaveData}`;\n    let networkPolicy = `Network access policy: ${this.state.networkAccess ? 'access' : 'do not access'}`;\n    let tempPrimText = `Info storage usage ${Math.round(this.state.tempUsage / this.state.tempQuota * 100)}%`;\n    let tempSecText = `${Math.round(this.state.tempUsage / (1024 * 1024))} MB of ${Math.round(this.state.tempQuota / (1024 * 1024))} MB used`;\n    let persPrimText = `Download storage usage ${Math.round(this.state.persUsage / this.state.persQuota * 100)}%`;\n    let persSecText = `${Math.round(this.state.persUsage / (1024 * 1024))} MB of ${Math.round(this.state.persQuota / (1024 * 1024))} MB used`;\n    return (\n      <div>\n        <AppBar title=\"info\" iconElementLeft={menu}/>\n        <p>{this.state.info}</p>\n        <List>\n          <ListItem primaryText=\"Network access policy\" leftIcon={networkIcon}\n            nestedItems={[\n              <ListItem key={1} primaryText={networkType}/>,\n              <ListItem key={2} primaryText={networkSaveData}/>,\n              <ListItem key={3} primaryText={networkPolicy}/>\n            ]}\n          />\n          <ListItem primaryText={tempPrimText} secondaryText={tempSecText}/>\n          <ListItem primaryText={persPrimText} secondaryText={persSecText}/>\n        </List>\n        <button onClick={this._handleLogout.bind(this)}>logout</button>\n      </div>\n    );\n  }\n}\n","export default class NetworkTest {\n  static get shouldAccessNetwork() {\n    let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n    let connectionTypeCheckFailed = typeof connection.type !== 'undefined' && !(connection.type === 'ethernet' || connection.type === 'wifi');\n    let connectionSaveDataCheckFailed = typeof connection.saveData !== 'undefined' && connection.saveData;\n\n    return !(connection && (connectionTypeCheckFailed || connectionSaveDataCheckFailed));\n  }\n\n  static get type() {\n    let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n\n    if (connection && connection.type) {\n      return connection.type;\n    }\n\n    return '';\n  }\n\n  static get saveData() {\n    let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n\n    if (connection && connection.saveData) {\n      return connection.saveData;\n    }\n\n    return false;\n  }\n}\n","export default class FileSystemFile {\n  constructor(fsFileEntry) {\n    this._fsFileEntry = fsFileEntry;\n  }\n\n  get name() {\n    return this._fsFileEntry.name;\n  }\n\n  get fullPath() {\n    return this._fsFileEntry.fullPath;\n  }\n\n  get isFile() {\n    return this._fsFileEntry.isFile;\n  }\n\n  get isDirectory() {\n    return this._fsFileEntry.isDirectory;\n  }\n\n  get URL() {\n    return this._fsFileEntry.toURL();\n  }\n\n  remove() {\n    return new Promise((resolve, reject) => {\n      this._fsFileEntry.remove(() => {\n        resolve();\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  write(data) {\n    return new Promise((resolve, reject) => {\n      this._fsFileEntry.createWriter(writer => {\n        writer.onwriteend = () => {\n          resolve();\n        };\n\n        writer.onerror = err => {\n          reject(err);\n        };\n\n        writer.write(data);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n}\n","import FileSystemFile from './FileSystemFile';\n\nexport default class FileSystemDirectory {\n  constructor(fsDirectoryEntry) {\n    this._fsDirectoryEntry = fsDirectoryEntry;\n  }\n\n  get name() {\n    return this._fsDirectoryEntry.name;\n  }\n\n  get fullPath() {\n    return this._fsDirectoryEntry.fullPath;\n  }\n\n  get isFile() {\n    return this._fsDirectoryEntry.isFile;\n  }\n\n  get isDirectory() {\n    return this._fsDirectoryEntry.isDirectory;\n  }\n\n  remove() {\n    return new Promise((resolve, reject) => {\n      this._fsDirectoryEntry.remove(() => {\n        resolve();\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  readDirectory(directory) {\n    return new Promise((resolve, reject) => {\n      let dirReader = this._fsDirectoryEntry.createReader();\n      let entries = [];\n\n      let getEntries = function() {\n        dirReader.readEntries(function(results) {\n          if (results.length) {\n            entries = entries.concat(results);\n            getEntries();\n          } else {\n            resolve(entries.map(entry => {\n              if (entry.isDirectory) {\n                return new FileSystemDirectory(entry);\n              } else if (entry.isFile) {\n                return new FileSystemFile(entry);\n              } else {\n                reject(new Error('unexpected directory entry'));\n              }\n            }));\n          }\n        }, function(error) {\n          reject(error);\n        });\n      };\n\n      getEntries();\n    });\n  }\n\n  _getDirectory(name, options) {\n    return new Promise((resolve, reject) => {\n      this._fsDirectoryEntry.getDirectory(name, options, res => {\n        resolve(new FileSystemDirectory(res));\n      }, err => {\n        reject(err);\n      })\n    });\n  }\n\n  getDirectory(name) {\n    return this._getDirectory(name, {create: false});\n  }\n\n  createDirectory(name) {\n    return this._getDirectory(name, {create: true});\n  }\n\n  _getFile(name, options) {\n    return new Promise((resolve, reject) => {\n      this._fsDirectoryEntry.getFile(name, options, res => {\n        resolve(new FileSystemFile(res));\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  getFile(name) {\n    return this._getFile(name, {create: false});\n  }\n\n  createFile(name) {\n    return this._getFile(name, {create: true});\n  }\n}\n","import FileSystemDirectory from './FileSystemDirectory';\n\nexport default class FileSystemFileSystem {\n  constructor(fsFileSystem) {\n    this._fsFileSystem = fsFileSystem;\n  }\n\n  get root() {\n    return new FileSystemDirectory(this._fsFileSystem.root);\n  }\n\n  get name() {\n    return this._fsFileSystem.name;\n  }\n}\n","// https://www.html5rocks.com/en/tutorials/file/filesystem/\n// https://developer.mozilla.org/en-US/docs/Web/API/LocalFileSystem\n// new FileSystemService(navigator.webkitPersistentStorage, window.webkitRequestFileSystem.bind(window, window.PERSISTENT));\nimport FileSystemFileSystem from './FileSystemFileSystem';\n\nexport default class FileSystemService {\n  constructor(storageInfo, requestFileSystem) {\n    this._storageInfo = storageInfo;\n    this._requestFileSystem = requestFileSystem;\n  }\n\n  getFile(root, path, data) {\n    return new Promise((resolve, reject) => {\n      root.getFile(path, {create: true}, res => {\n        resolve(res);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  getFileSystem() {\n    return this.queryUsageAndQuota().then(resUQ => {\n      return new Promise((resolve, reject) => {\n        this._requestFileSystem(resUQ.quota, res => {\n          resolve(new FileSystemFileSystem(res));\n        }, err => {\n          reject(err);\n        });\n      });\n    });\n  }\n\n  requestQuota(requestedQuota) {\n    return new Promise((resolve, reject) => {\n      this._storageInfo.requestQuota(requestedQuota, quota => {\n        resolve({quota: quota});\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  queryUsageAndQuota() {\n    return new Promise((resolve, reject) => {\n      this._storageInfo.queryUsageAndQuota((usage, quota) => {\n        resolve({\n          usage: usage,\n          quota: quota\n        });\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ChannelListView from './ChannelListView';\nimport ChannelView from './ChannelView';\nimport registerServiceWorker from './registerServiceWorker';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport {default as pouchdb} from 'pouchdb';\nimport PubSub from 'pubsub-js';\nimport uuid from 'uuid';\n\nimport AuthenticationService from './AuthenticationService';\nimport ConsoleLogger from './ConsoleLogger';\nimport ChannelService from './ChannelService';\nimport ChannelRepository from './ChannelRepository';\nimport ChannelSyncService from './ChannelSyncService';\nimport NavigationService from './NavigationService';\nimport EnclosureRepository from './EnclosureRepository';\nimport UpdateDaemon from './UpdateDaemon';\nimport PlayerView from './PlayerView';\nimport PlayerService from './PlayerService';\nimport InfoPresenter from './InfoPresenter';\nimport ps from './PubSub';\nimport np from './NotificationPresenter';\nimport ip from './InfoPresenter';\nimport InfoView from './InfoView';\nimport nt from './NetworkTest';\nimport FileSystemService from './FileSystemService';\nimport {enclosureDbAttachmentRemoval} from './migrationFunctions';\n\nlet pouchChannels = new pouchdb('more-podcasts_channelRepository', {storage: 'persistent'});\nlet pouchEnclosures = new pouchdb('more-podcasts_enclosureRepository', {storage: 'persistent'});\nlet fssPersistent = new FileSystemService(navigator.webkitPersistentStorage, window.webkitRequestFileSystem.bind(window, window.PERSISTENT));\nlet fssTemporary = new FileSystemService(navigator.webkitTemporaryStorage, window.webkitRequestFileSystem.bind(window, window.TEMPORARY));\n\nps.ps = PubSub;\nps.uuid = uuid;\n\nnp.ps = ps;\nip.ps = ps;\nip.fssPers = fssPersistent;\nip.fssTemp = fssTemporary;\n\nnew ChannelRepository(pouchChannels, PubSub);\nnew EnclosureRepository(pouchEnclosures, PubSub, fssPersistent);\nnew AuthenticationService();\nnew ConsoleLogger();\nnew ChannelService();\nnew ChannelSyncService();\nnew NavigationService();\nnew UpdateDaemon(ps, nt, fssPersistent);\nnew PlayerService(ps, fssPersistent);\n\nInfoPresenter.NetworkTest = nt;\n\ninjectTapEventPlugin();\n\nReactDOM.render(\n  <Router>\n    <App>\n      <Switch>\n        <Route exact path=\"/\" component={PlayerView}/>\n        <Route exact path=\"/channels\" component={ChannelListView}/>\n        <Route exact path=\"/channels/:channelId\" component={ChannelView}/>\n        <Route exact path=\"/player\" component={PlayerView}/>\n        <Route exact path=\"/info\" component={InfoView}/>\n      </Switch>\n    </App>\n  </Router>, document.getElementById('root')\n);\n\nregisterServiceWorker();\nenclosureDbAttachmentRemoval(pouchEnclosures);\n","export function enclosureDbAttachmentRemoval(encDb) {\n  return encDb.allDocs({include_docs: true}).then(docs => {\n    return Promise.all(docs.rows.map(doc => {\n      if (doc.doc._attachments) {\n        return Promise.all(Object.keys(doc.doc._attachments).map(att => {\n          return encDb.removeAttachment(doc.doc._id, att, doc.doc._rev);\n        }));\n      } else {\n        return Promise.resolve();\n      }\n    }));\n  }).then(() => {\n    return encDb.compact();\n  }).catch(err => {\n    console.log(err);\n  });\n}\n"],"sourceRoot":""}